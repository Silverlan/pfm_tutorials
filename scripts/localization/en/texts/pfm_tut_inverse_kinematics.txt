pfm_tut_inverse_kinematics_intro = "[This tutorial is a work-in-progress]\nWelcome to the tutorial on character posing. In this tutorial you will learn how to use inverse kinematics (IK) to pose and animate characters in PFM.\nUsing IK, you can directly position a character's hands, feet, or other body parts, and have the rest of their limbs and body follow naturally. This makes it significantly easier to create natural-looking poses or movements."

pfm_tut_inverse_kinematics_place_character = "To give you a better understanding of what that means, let's jump right in. Full-body inverse kinematics is available out of the box for most humanoid biped models. To make use of it, all you have to do is place a character model in the scene. Try placing the highlighted model in the scene now."

pfm_tut_inverse_kinematics_move_tool = "Next, switch to the \"{pfm_viewport_tool_move}\" tool."

pfm_tut_inverse_kinematics_ik_controls = "In the viewport several small cubes have now appeared at the extremities (hands and feet), as well as the spine. These are called \"ik controls\" which you can use to move those body-parts around. Try clicking and dragging them to see how they affect the character's pose."

pfm_tut_inverse_kinematics_ik_control_types = "You may have noticed that not all IK controls behave the same. The controls for the spine are purely positional (indicated by the yellow color), you can move them, but not rotate them. If you click one of the hand controls (orange), you can switch to the \"{pfm_viewport_tool_rotate}\" tool to rotate it. Try to avoid unnatural hand orientations, or the IK simulation may become unstable.\nThe foot controls (green) can also be rotated, however contrary to the hands the foot orientation has no bearing on the IK rig."

pfm_tut_inverse_kinematics_elbow_control = "There are also some additional controls that are disabled by default, such as for the elbows and the knees. If you need more control over the way that these limbs bend, you can enable them in the actor editor by increasing their \"{c_ik_solver_p_strength}\" property value. You can see a new control popping up in the viewport if you increase the strength from 0, and it will disappear if you set it back to 0. The strength affects how much influence/pull the control has on the IK rig. Try it now."

pfm_tut_inverse_kinematics_quick_ik = "Full-body IK is currently only available for biped character models, future versions of PFM will also support quadruped models. It is also possible to create custom full-body IK rigs for other types of models, but that would exceed the scope of this tutorial.\nA more basic alternative to full-body IK is the \"Quick IK\" system, which is less versatile, but allows you to set up simple IK chains for any limb of any character model."

pfm_tut_inverse_kinematics_determine_bone = "For demonstration purposes, the full-body IK rig has been removed from the character model, so that we may add a quick-IK chain instead. An IK chain can be added for a specific limb only, and as you will see in a moment, it will not affect other IK chains. Let's start by adding an IK chain to the left arm of the character.\n\nSelect the \"{0}\" bone by selecting the character in the viewport, and then clicking the character's left hand. Alternatively, you can locate the bone within the actor editor and select it from there."

pfm_tut_inverse_kinematics_select_chain_length = "Next, right-click the bone in the actor editor to open the context menu, then select the option labeled \"{pfm_actor_editor_add_ik_control}\". Here you now have to specify the \"chain length\" for the IK chain. The chain length determines the number of parent bones that will be affected when positioning the bone.\n\nIn this example, positioning the hand should also affect both the lower and upper arm. We also need to include the shoulder bone, which will act as an anchor. All in all this means we need a chain length of {0}.\nPlease note that once a bone becomes part of an IK chain or IK rig, you will no longer be able to use forward kinematics to control that particular bone directly.\n\nSelect the chain length of {0} to continue."

pfm_tut_inverse_kinematics_controls = "In the actor editor you can now find a new component called "{c_ik_solver}". If you expand this component you will see two controls, one for the hand (also called the \"effector\") and one for its immediate parent, the lower arm. If you switch to the \"{pfm_viewport_tool_move}\" tool again, you will see two corresponding IK controls in the viewport. If you move or rotate these, you'll notice that the rest of the body will stay in place (contrary to full-body IK). IK chains like these also do not have angular limits, which means that you may end up with unnatural looking poses depending on how you pose them (such as the elbow bending backwards)."

pfm_tut_inverse_kinematics_controls2 = "You can add multiple IK chains per actor, as long as they don't interfere with each other. It's currently not possible to combine full-body IK and IK chains, but this will be added in a future update."

pfm_tut_inverse_kinematics_conclusion = "This concludes the tutorial on the IK basics.\n\nYou can now end the tutorial, or press the continue-button to start the next tutorial in this series."
