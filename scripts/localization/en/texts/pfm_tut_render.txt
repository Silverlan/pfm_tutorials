pfm_tut_render_intro = "Welcome to the render tutorial. This tutorial will teach you how to render images and animations with the render panel."

pfm_tut_render_sections = "This is the render panel, which is split into two sections:\nTo the left is the render preview, which is initially black because nothing has been rendered yet.\nOn the right you can find various options, which allow you to change the renderer, the render resolution, etc. You can get more information for each option by hovering over it with the mouse."

pfm_tut_render_render_engine = "By default there are two render engines available: \"Pragma\" and \"{pfm_render_engine_cycles}\".\nThe Pragma render engine simply uses Pragma's own renderer for the image. The overall render quality will be lower compared to {pfm_render_engine_cycles}, but rendering will be significantly faster. Pragma is recommended if you're planning on rendering animations.\n\n{pfm_render_engine_cycles} is a path tracing renderer, which can be used to create highly realistic images at the cost of very slow render times.\nThis renderer is usually a good option if you want to render a single image, like a poster.\n\nFor this demonstration we will be using the {pfm_render_engine_cycles} renderer. Switch to it to continue."

pfm_tut_render_render_image = "You can use these buttons to render the image.\nRendering a preview will create a low-resolution image, which will not get saved to disk.\nIt's fast to render and should give you a good approximation of what the final render will look like.\n\n\"{pfm_render_image}\" will generate the full-resolution image. Depending on the project, your hardware and the render settings, this can take several minutes or more.\n\nTry rendering the full-resolution image now. Please note that Pragma may appear frozen for a bit if this is the first render for this project session."

pfm_tut_render_render_progress = "When rendering using an offline renderer like {pfm_render_engine_cycles}, you can view the render progress down here.\nAs long as the render is in progress, PFM is intentionally throttled to save GPU resources for the render. This means that PFM may appear sluggish and slow to react to inputs.\n\nPlease wait for the render to complete before continuing."

pfm_tut_render_saved_render = "The image is automatically saved to the disk. You can press this button to reveal it in the file explorer."

pfm_tut_render_render_job = "Alternatively to rendering within PFM, you can also create a \"Render Job\". This will create a render file, which can be used to render the image without having to keep PFM running.\nIn some cases this can be significantly faster compared to rendering within PFM, because it allows the renderer to use all available GPU resources, some of which would otherwise be taken up by PFM.\n\nTry creating a render job now."

pfm_tut_render_render_job_script = "A file explorer window should now have appeared, which contains a \"{}\". Executing this file will start the render process, and the image will be saved in the same directory once complete.\nYou can also create a render job for a sequence of images, in which case it will render them all one after another.\n\nRender jobs are only available for offline renderers like {pfm_render_engine_cycles}, and cannot be used for the Pragma renderer."

pfm_tut_render_vr_render = "You can also use PFM to render other image types, such as equirectangular images for VR.\n\nChange the preset to \"{pfm_rt_preset_vr}\" and the render engine to \"Pragma\" to continue."

pfm_tut_render_vr_render_start = "Now press the \"{pfm_render_image}\" button to start the render. The scene will be rendered twice, once for the left eye and once for the right eye, which will then be stitched together to a single equirectangular image and saved to disk."

pfm_tut_render_vr_view = "When rendering VR images, you can click and drag the left mouse button in the render preview to look around as a 360 degree view."

pfm_tut_render_vr_view_mode = "You can click this option to toggle the preview between the left eye and the right eye, or select \"{pfm_cycles_preview_mode_flat}\" to view the actual equirectangular image."

pfm_tut_render_image_sequence = "To render a sequence of images instead of a single frame, you can change the number of frames in the settings. To render the entire film clip, you can right-click the field and choose \"{pfm_number_of_frames_set_to_end_of_clip}\". For this demonstration, let's try rendering {0} frames in sequence using the Pragma renderer.\n\nPress the continue-button to change the number of frames to {0}."

pfm_tut_render_image_sequence_render = "Next, press the \"{pfm_render_image}\" button, which will start the render process for the sequence."

pfm_tut_render_image_sequence_render_wait = "Please wait for the render to complete before continuing."

pfm_tut_render_image_sequence_timeline = "The frames are automatically saved to the output directory, but you can also use the timeline controls to jump between the frames and preview them in PFM."

pfm_tut_render_video = "PFM cannot generate video files. In order to create a video from the rendered image sequence, you still need a video editing program. You can export the timeline in the FCPXML format through the menu bar, which contains information about all of the rendered frames, as well as the audio in your PFM project. You can then import the FCPXML file into your video editing software and all of the frames and audio should appear automatically with the correct settings (like the frame rate)."

pfm_tut_render_video_davinci = "While most video editing programs should support the FCPXML format, the recommended program for use with PFM is \"DaVinci Resolve\", which can be downloaded for free. If you have \"DaVinci Resolve\" installed, you can use this option to launch it directly and import the timeline."

pfm_tut_render_settings = "One more thing before we conclude: When using the Pragma renderer, you should enable supersampling to prevent aliasing in the render. The higher the supersampling factor, the better the results will be, however depending on your GPU's capabilities, higher factor values may cause PFM to crash if not enough VRAM is available. You can try enabling tiled rendering, which helps reduce the required amount of VRAM, however this feature is currently experimental and may result in rendering artifacts."

pfm_tut_render_conclusion = "This concludes the tutorial on the render panel.\n\nYou can now end the tutorial, or press the continue-button to start the next tutorial in this series."
